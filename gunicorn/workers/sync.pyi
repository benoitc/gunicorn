from _typeshed import Incomplete

from gunicorn import util
from gunicorn.http import Message
from gunicorn.sock import TCPSocket
from gunicorn.workers import base

class StopWaiting(Exception): ...

class SyncWorker(base.Worker):
    def accept(self, listener: TCPSocket) -> Incomplete: ...
    def wait(self, timeout: float) -> Incomplete: ...
    def is_parent_alive(self) -> bool: ...
    def run_for_one(self, timeout: float) -> Incomplete: ...
    def run_for_multiple(self, timeout: float) -> None: ...
    def run(self) -> None: ...
    def handle(
        self, listener: Incomplete, client: Incomplete, addr: Incomplete
    ) -> None: ...
    alive: bool
    def handle_request(
        self, listener: Incomplete, req: Message, client: Incomplete, addr: Incomplete
    ) -> None: ...
