[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
# see https://packaging.python.org/en/latest/specifications/pyproject-toml/
name = "gunicorn"
authors = [{name = "Benoit Chesneau", email = "benoitc@gunicorn.org"}]
license = {text = "MIT"}
description = "WSGI HTTP Server for UNIX"
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Internet",
    "Topic :: Utilities",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: WSGI",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Server",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">=3.7"
dependencies = [
    'importlib_metadata; python_version<"3.8"',
    #"packaging>=21.0",
    "packaging",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://gunicorn.org"
Documentation = "https://docs.gunicorn.org"
"Issue tracker" = "https://github.com/benoitc/gunicorn/issues"
"Source code" = "https://github.com/benoitc/gunicorn"
Changelog = "https://docs.gunicorn.org/en/stable/news.html"

[project.optional-dependencies]
gevent = [
    # 21.8.0 is what Ubuntu 22.04 shipped
    # 22.8.0 is lowest tested OK on 3.11
    # 22.10 is the last version to support 3.7
    #'gevent>=21.8.0; python_version<"3.11"',
    #'gevent>=22.8.0; python_version>="3.11"',
    # gevent 1.4.0 does not build for 3.11 (incompat Cython)
    "gevent>=1.4.0",
]
eventlet = [
    # eventlet 0.34.1 https://github.com/eventlet/eventlet/issues/859
    # eventlet 0.36.0 https://github.com/eventlet/eventlet/issues/946
    # eventlet 0.26.0 needed for 3.7
    # eventlet 0.26.1 needed for 3.7 dependencies
    # eventlet 0.33.0 needed for python 3.10
    #'eventlet>=0.26.1; python_version<"3.10"',
    #'eventlet>=0.33.3; python_version>="3.10"',
    "eventlet>=0.24.1,!=0.36.0",
]
tornado = [
    # arbitrary unsupported release with grave issues
    # TODO: work our way up from this one and work our way up
    #"tornado>=3.0.2",
    "tornado>=0.2",
]
gthread = []
setproctitle = [
    # 1.2.0 needed for Python 3.8
    #"setproctitle>=1.2.0",
    "setproctitle",
]
testing-mindep = [
    # this sections helps tox/pip select lowest version
    # needs to be kept in sync with sections above until either pip can do it:
    #  https://github.com/pypa/pip/issues/8085
    # .. or use timemachine
    "coverage[toml]==5.2.1",
    "packaging==21.0",
    "pytest==7.2.0",
    "setproctitle==1.2.0",
    "setuptools==61.2",
    "tornado==3.0.2",
    'eventlet==0.26.1; python_version<"3.10"',
    'eventlet==0.33.3; python_version>="3.10"',
    'gevent==21.8.0; python_version<"3.11"',
    'gevent==22.8.0; python_version>="3.11"',
]
testing = [
    "gevent",
    "eventlet",
    "coverage",
    "pytest",
    "pytest-cov",
]

[project.scripts]
# duplicates "python -m gunicorn" handling in __main__.py
gunicorn = "gunicorn.app.wsgiapp:run"

[project.entry-points."paste.server_runner"]
# note the quotes around "paste.server_runner" to escape the dot
main = "gunicorn.app.pasterapp:serve"

[tool.coverage.report]
omit = [
    # workaround for bad test tripping pytest+coverage:
    # tests will load such file as configuration
    # when we delete the source, we do not care for its coverage
    "*/gunicorn.conf.py",
]

[tool.pytest.ini_options]
# can override these: python -m pytest --override-ini="addopts="
faulthandler_timeout = 25
norecursedirs = ["examples", "lib", "local", "src"]
testpaths = ["tests/"]
addopts = "--assert=plain --cov=gunicorn --cov-report=xml"

[tool.setuptools]
zip-safe = false
include-package-data = true
license-files = ["LICENSE"]

[tool.setuptools.packages]
find = {namespaces = false}

[tool.setuptools.dynamic]
version = {attr = "gunicorn.__version__"}
