[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
# see https://packaging.python.org/en/latest/specifications/pyproject-toml/
name = "gunicorn"
authors = [{name = "Benoit Chesneau", email = "benoitc@gunicorn.org"}]
license = {text = "MIT"}
description = "WSGI HTTP Server for UNIX"
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Internet",
    "Topic :: Utilities",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: WSGI",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Server",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">=3.7"
dependencies = [
    'importlib_metadata; python_version<"3.8"',
    "packaging",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://gunicorn.org"
Documentation = "https://docs.gunicorn.org"
"Issue tracker" = "https://github.com/benoitc/gunicorn/issues"
"Source code" = "https://github.com/benoitc/gunicorn"
Changelog = "https://docs.gunicorn.org/en/stable/news.html"

[project.optional-dependencies]
gevent = ["gevent>=1.4.0"]
eventlet = ["eventlet>=0.24.1,!=0.36.0"]
tornado = ["tornado>=0.2"]
gthread = []
setproctitle = ["setproctitle"]
# note: extra names use dashes, not underscores
lint-types = [
  "mypy>=1.10.0",
]
# linting on fixed versions, upgrading to matrix-incompat pylint release is OK
lint-code = [
    "pylint==2.17.4",
    "pycodestyle",
]
lint-docs = [
    "restructuredtext_lint",
    "pygments",
]
# note we are styling stubs to work on 3.10 - this may not always match code
style-types = [
  "isort==5.12.0",
  "pyupgrade==3.15.2",
  "black==23.11.0",
]
testing = [
    "gevent",
    "eventlet",
    "coverage",
    "pytest>=7.2.0",
    "tornado>=6.0",
]
dev = [
    # setuptools v68.0 fails hard on invalid pyproject.toml
    # which a developer would want to know
    # otherwise, oldest known-working version is 61.2
    "setuptools>=68.0",
    "sphinx",
    "sphinx_rtd_theme",
]


[project.scripts]
# duplicates "python -m gunicorn" handling in __main__.py
gunicorn = "gunicorn.app.wsgiapp:run"

# note the quotes around "paste.server_runner" to escape the dot
[project.entry-points."paste.server_runner"]
main = "gunicorn.app.pasterapp:serve"

[tool.pytest.ini_options]
# # can override these: python -m pytest --override-ini="addopts="
norecursedirs = ["examples", "lib", "local", "src"]
testpaths = ["tests/"]
addopts = ["--strict-markers", "--assert=plain"]
xfail_strict = true

[tool.setuptools]
zip-safe = false
include-package-data = true
license-files = ["LICENSE"]

[tool.setuptools.packages]
find = {namespaces = false}

[tool.setuptools.dynamic]
version = {attr = "gunicorn.__version__"}

[tool.mypy]
# protect against typos here
warn_unused_configs = true
no_implicit_reexport = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
# setproctitle known to not be typed
# misnomer, we actualy want ignore_untyped_imports
module = "setproctitle"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# gevent known to not be typed
module = "eventlet"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# gevent known to not be typed
module = "gevent"
ignore_missing_imports = true

[tool.pypuprade]
# pyupgrade does not read this. specify --py37-plus yourself

[tool.black]
line-length = 88
target-version = ["py37", "py38", "py39", "py310", "py311", "py312"]

[tool.isort]
line_length = 88
# changes stdlib category - all or auto (=current) can produce inconsistent results
# py_version = "py310"
profile = "black"
